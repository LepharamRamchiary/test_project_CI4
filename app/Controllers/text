<?php

namespace App\Controllers;

use App\Models\LoginModel;
use Config\Database;
use Google\Client;
use Google\Service\Oauth2;
// use Google\Service\Oauth2\Userinfo;


class Login  extends BaseController
{
    public $loginModel;
    public $session;
    public function __construct()
    {
        helper('form');
        $this->loginModel = new LoginModel();
        // $session = \Config\Services::session();
        $this->session = session();
    }
    public function index()
    {
        $data = [];
        // if ($this->request->getMethod() == 'POST') {
        //     $rules = [
        //         'email' => 'required|valid_email',
        //         'password' => 'required',
        //     ];

        //     if ($this->validate($rules)) {
        //         $email = $this->request->getVar('email');
        //         $password = $this->request->getVar('password');

        //         $userdata = $this->loginModel->verifyEmail($email);

        //         if ($userdata) {
        //             if (password_verify($password, $userdata['password'])) {
        //                 if ($userdata['status'] == 'active') {
        //                     $login_info = [
        //                         'uniid' => $userdata['uniid'],
        //                         'agent' => $this->getUserAgentInfo(),
        //                         'ip' => $this->request->getIPAddress(),
        //                         'login_time' => date('Y-m-d h:i:s'),
        //                     ];

        //                     $la_id = $this->loginModel->saveLoginInfo($login_info);

        //                     if($la_id){
        //                         $this->session->set('logged_info', $la_id);
        //                     }

        //                     $this->session->set('logged_user', $userdata['uniid']);
        //                     return redirect()->to(base_url() . 'dashboard');
        //                 } else {
        //                     $this->session->setTempdata('error', 'Your account is not active. Please contact admin or Activeted your account.', 3);
        //                     return redirect()->to(current_url());
        //                 }
        //             } else {
        //                 $this->session->setTempdata('error', 'Wrong password entered from email.', 3);
        //                 return redirect()->to(current_url());
        //             }
        //         } else {
        //             $this->session->setTempdata('error', 'Sorry! Email does not exist.', 3);
        //             return redirect()->to(current_url());
        //         }
        //     } else {
        //         $data['validation'] = $this->validator;
        //     }
        // }


        require_once APPPATH . "libraries/vendor/autoload.php";



        $google_client = new Client();
        $google_client->setClientID('');
        $google_client->setClientSecret('');
        $google_client->setRedirectUri(base_url() . 'login');
        $google_client->addScope('email');
        $google_client->addScope('profile');

        if ($this->request->getVar('code')) {
            $token = $google_client->fetchAccessTokenWithAuthCode($this->request->getVar('code'));
            if (!isset($token['error'])) {
                $google_client->setAccessToken($token['access_token']);
                $this->session->set('access_token', $token['access_token']);
                // to get the profile data 
                $google_service = new Oauth2($google_client);
                $data['googleUserData'] = $google_service->userinfo->get();

                $userData = [
                    'id' => $data['googleUserData']->getId(),
                    'email' => $data['googleUserData']->getEmail(),
                    'name' => $data['googleUserData']->getName(),
                    'picture' => $data['googleUserData']->getPicture(),
                ];

                if ($this->loginModel->google_user_exists($userData['id'])) {
                    // update
                    $dataUser = [
                        'first_name' => explode(' ', $userData['name'])[0] ?? '',
                        'last_name' => explode(' ', $userData['name'])[1] ?? '',
                        'email' => $userData['email'],
                        'profile_pic' => $userData['picture'],
                    ];
                    $this->loginModel->updateUser($userData['id'], $dataUser);
                } else {
                    // insert
                    $dataUser = [
                        'oauth_id' => $userData['id'],
                        'first_name' => explode(' ', $userData['name'])[0] ?? '',
                        'last_name' => explode(' ', $userData['name'])[1] ?? '',
                        'email' => $userData['email'],
                        'profile_pic' => $userData['picture'],
                    ];
                    $this->loginModel->insertUser($dataUser);
                    $this->session->set('google_user', $dataUser);
                    return redirect()->to(base_url() . 'dashboard');
                }
            }
        }

        $data['loginButton'] = $google_client->createAuthUrl();

        if ($this->session->get('access_token')) {
            $data['loginButton'] = '';
        }

        return view('login_view', $data);
    }

    public function getUserAgentInfo()
    {
        $agent = $this->request->getUserAgent();

        if ($agent->isBrowser()) {
            $currentAgent = $agent->getBrowser();
        } else if ($agent->isRobot()) {
            $currentAgent = $agent->getRobot();
        } else if ($agent->isMobile()) {
            $currentAgent = $agent->getMobile();
        } else {
            $currentAgent = 'Unidentified User Agent';
        }
        return $currentAgent;
    }
}




<?php

namespace App\Controllers;

use App\Models\DashboardModel;

class Dashboard extends BaseController
{
    public $dashboardModel;

    public function __construct()
    {
        $this->dashboardModel = new DashboardModel();
    }


    public function index()
    {
        $data = [];
        if (!(session()->has('logged_user') || session()->has('google_user'))) {
            return redirect()->to(base_url() . 'login');
        }
        $unnid = session()->get('logged_user');

        // $userdata = 
        // print_r($userdata);
        $data['userdata'] = $this->dashboardModel->getLoggedUserData($unnid);
        return view('dashboard_view', $data);
    }

    public function logout()
    {
        if (session()->has('logged_info')) {
            $la_id = session()->get('logged_info');
            $this->dashboardModel->updateLogoutTime($la_id);
        }

        session()->remove('logged_user');
        session()->destroy();
        return redirect()->to(base_url() . 'login');
    }

    public function login_activity()
    {

        $data['userdata'] = $this->dashboardModel->getLoggedUserData(session()->get('logged_user'));
        $data['login_info'] = $this->dashboardModel->getLoginUserInfo(session()->get('logged_user'));
        return view('login_activity_view', $data);
    }
}
